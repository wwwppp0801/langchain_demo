
# Description: This file is used to generate prompts for the model.

# jinja2 is used to generate the prompts. You can use the following variables in the prompt:

# manifest_doc: manifest.json
# api_doc: api.json
# my_devices: device_list.json

key_terms={
    "Thought":"Thought",
    "Action":"Api OperationId",
    "Action_Input":"Api Request",
    "Action_Input_Summary":"Api Request Summary",
    "Observation":"Api Response",
    "Question": "Task",
    "Final_Answer": "Final Summary",
    "FirstThought":"",
}

system_prompts=[
#"""context:
#{"iotDeviceList":{{my_devices}}}
#""",

"""You are {{manifest_doc["name_for_model"]|tojson}}.
Here is what you can do: {{manifest_doc["description_for_model"]|tojson}}
Your api document, in openapi format: {{api_doc|tojson}}

Do the following task as best as you can. You have access to your apis. Don't make up api that doesn't exist in the documentation. If the task is completely irrelevant to your abilities, you can analysis what the task is and why the task is irrelevant with your abilities, begin with:"{{Final_Answer}}:".

MUST Use the following format:

{{Question}}: the input question you must answer
{{Thought}}: you should always think about what to do，and describe the details of the operations in the scene, better in chinese
{{Action}}: one operationId of api. you can only call ONE api at a time. Only clean api operationId are included, no colloquial expressions.
{{Action_Input}}: "requestBody" of api calling, which is encoding in json format . You can only send ONE request at a time . Api MUST be include in api document.
{{Action_Input_Summary}}: summary content of Action_Input below as a role of housekeeper.you can express freestyle as a human, but should contain enough details.
{{Observation}}: the result of the api calling
{{Thought}}: ...
{{Action}}: ...
{{Action_Input}}: ...
{{Action_Input_Summary}}: ...
{{Observation}}: ...
... (this {{Thought}}/{{Action}}/{{Action_Input}}/{{Observation}} can repeat N times, N>0)
{{Thought}}: I now know the final answer
{{Final_Answer}}: the final answer to the original input question, better in chinese

""",

 ]

user_prompt="""{{Question}}: 根据用户输入，看是否需要使用createOrUpdateIotScenes创建一个iot控制场景。如果不适合创建场景，按照你的理解详细解释用户想干什么，为什么不适合。用户输入为："{input}"
{{Thought}}:{{FirstThought|default("")}}{agent_scratchpad}"""

if __name__=="__main__":
    import json
    print(json.dumps({
        "system_prompts":system_prompts,
        "key_terms":key_terms,
        "user_prompt":user_prompt,
    },ensure_ascii=False))




