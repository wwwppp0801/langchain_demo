openapi: 3.0.1
info:
  title: DuerOS Iot
  description: DuerOS Iot plugin. Can help you develop an automatic control plan for iot devices in your home. Iot devices include lights, air conditioners, alarm clocks, and curtains
  version: 'v1'
servers:
  - url: http://127.0.0.1:8002
paths:
  /iotPlan:
    post:
      operationId: iotPlan
      summary: add A new control plan, for only ONE iot device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                time:
                  type: string
                  required: false
                  description: 'format:```{hour}:{minutes}```, eg: ```22:06```. The {hour} field is on a 24-hour basis. No this field means "now".'
                date:
                  type: string
                  required: false
                  description: 'format:```{year}-{month}-{day}```, eg: ```2023-03-26```.  Only valid when repeat=="none". No this field means "today".'
                repeat:
                  type: string
                  enum: [ workday, restday, everyday, spring, summer, fall, winter, none ]
                  required: true
                  description: >
                    How this plan will be repeated :
                      * `workday` - any day that you work.
                      * `restday` - any day that you rest.
                      * `everyday` - everyday
                      * `spring` - one of the four temperate seasons. lasting from March to May north of the equator, and from September to November south of the equator.
                      * `summer` - one of the four temperate seasons. lasting from June to Augest north of the equator, and from December to February south of the equator.
                      * `fall` - one of the four temperate seasons. lasting from September to November north of the equator, and from March to May south of the equator.
                      * `winter` - one of the four temperate seasons. lasting from December to February north of the equator, and from June to Augest south of the equator.
                      * `none` - no repeat.
                action:
                  type: string
                  enum: [ alarm, curtain, aircondition, light ]
                  required: true
                  description: >
                    Which device to control :
                      * `alarm` - Can schedule a new alarm in alarm clock
                      * `curtain` - Can control electric curtains to open or close
                      * `aircondition` - Can control air conditioner's temperature and state
                      * `light` - Can control a light on/off
                aircondition:
                  type: object
                  required: false
                  description: only valid when action=="aircondition"
                  properties:
                    temperature:
                      type: integer
                      description: Celsius temperature.
                    method:
                      type: string
                      enum: [ cooling, heating, close ]
                      description: >
                        state of an air conditioner:
                          * `cooling` -  cooling the air in a room.
                          * `heating` -  heating the air in a room
                          * `close` -  close the air conditioner
                curtain:
                  type: object
                  required: false
                  description: only valid when action=="curtain"
                  properties:
                    method:
                      type: string
                      enum: [ open, close ]
                light:
                  type: object
                  required: false
                  description: only valid when action=="light"
                  properties:
                    name: 
                      type: string
                      description: the name of light. this name is set by user, usually in chinese
                    method:
                      type: string
                      enum: [ open, close ]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    required: true
                    description: 0 means success, others means fail
